$().ready(function() {
    var formValidate = new FormValidate();
    $("[validate][autoblurvalidate='true']").each(function() {
        var obj = $(this);
        obj.blur(function() {
            if (isValidateDependControlidHidden(obj)) {
                return
            }
            var controls = [obj];
            if (obj.attr("autoValidatereReferenceIDs") && obj.attr("autoValidatereReferenceIDs") != "") {
                var ids = obj.attr("autoValidatereReferenceIDs").split(",");
                for (var i = 0; i < ids.length; i++) {
                    controls.push($("#" + ids[i]))
                }
            }
            var result = formValidate.execByControls(controls);
            var errObj = null;
            if (obj.attr("errMsgID") && obj.attr("errMsgID") != "") {
                errObj = $("#" + obj.attr("errMsgID"))
            }
            if (result) {
                obj.attr("isValidateSucceed", false);
                if (errObj != null) {
                    errObj.text(result.errmsg)
                }
            } else {
                if (obj.attr("blurValidateAfter") && obj.attr("blurValidateAfter") != "") {
                    var errMsg = eval(obj.attr("blurValidateAfter") + "()");
                    if (errMsg && errMsg != "") {
                        if (errObj != null) {
                            errObj.text(errMsg)
                        }
                        obj.attr("isValidateSucceed", false)
                    } else {
                        if (errObj != null) {
                            errObj.text("")
                        }
                    }
                    return
                }
                obj.attr("isValidateSucceed", true);
                if (errObj != null) {
                    errObj.text("")
                }
            }
        })
    })
});
function FormValidate() {
    var c = function(f, e) {
        a(f);
        f.focus(function() {
            b(f)
        });
        return {
            obj: f,
            errmsg: e
        }
    };
    this.addErrorStyle = function(e) {
        a(e)
    };
    var a = function(e) {
        e.css("border-color", "red")
    };
    this.clearErrorStyle = function(e) {
        b(e)
    };
    var b = function(e) {
        e.css("border-color", "")
    };
    this.execByControls = function(e) {
        if (e && e.length > 0) {
            for (var f = 0; f < e.length; f++) {
                var h = undefined;
                var g = $(e[f]);
                if (g.attr("validate")) {
                    this.clearErrorStyle(g);
                    if (isValidateDependControlidHidden(g)) {
                        return
                    }
                    if ((g.is("input") && (g.attr("type") == "text" || g.attr("type") == "password")) || g.is("textarea")) {
                        h = d(g)
                    }
                }
                if (h) {
                    return h
                }
            }
        }
    };
    var d = function(f) {
        var g = $.trim(f.val());
        var e = getPlaceText(f);
        if (f.attr("notEmpty") && g == "") {
            return c(f, "请输入" + e)
        } else {
            if (g == "") {
                return
            }
        }
        if (f.attr("minLength") && g.length < parseInt(f.attr("minLength"))) {
            return c(f, e + "不足" + f.attr("minLength") + "位")
        }
        if (f.attr("format") && f.attr("format") != "") {
            switch (f.attr("format")) {
            case "number":
                if (isNaN(g)) {
                    return c(o, e + "必须为数字")
                }
                return;
            case "mobile":
                if (isMobile(g)) {
                    return
                }
                return c(f, e + "格式不对");
            case "mail":
                if (isEmail(g)) {
                    return
                }
                return c(f, e + "格式不对");
            default:
                if (isRegex(f.attr("format"), g)) {
                    return
                }
                return c(f, e + "格式不对")
            }
        }
        var h = $("#" + f.attr("valueEqualID"));
        if (f.attr("valueEqualID") && f.attr("valueEqualID") != "" && $.trim(h.val()) != g) {
            return c(f, e + "与" + getPlaceText(h) + "输入不一致")
        }
    };
    this.execByParentID = function(f) {
        var e = "#" + f;
        var g = $(e + " input[type='text']," + e + " [type='password']," + e + " textarea");
        return this.execByControls(g)
    }
}
function isMobile(a) {
    return isRegex("^(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$", a)
}
function isEmail(a) {
    return isRegex("[\\w\\u4e00-\\u9fa5]+([-+.][\\w\\u4e00-\\u9fa5]+)*@[\\w\\u4e00-\\u9fa5]+([-.][\\w\\u4e00-\\u9fa5]+)*\\.[\\w\\u4e00-\\u9fa5]+([-.][\\w\\u4e00-\\u9fa5]+)*$", a)
}
function isRegex(a, b) {
    return new RegExp(a).test(b)
}
function isValidateDependControlidHidden(a) {
    if (a.attr("validateDependVisibleID") && a.attr("validateDependVisibleID") != "" && $("#" + a.attr("validateDependVisibleID")).is(":hidden")) {
        return true
    }
    return false
}
function getPlaceText(b) {
    var d = ["placeholder", "placeholder-text"];
    for (var a = 0; a < d.length; a++) {
        var c = b.attr(d[a]);
        if (c && c != "") {
            return c
        }
    }
    return ""
};